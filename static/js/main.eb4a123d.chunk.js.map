{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$placeholder","placeholder","concat","_ref$required","required","_ref$onChange","onChange","_useState","useState","Math","random","toFixed","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","trim","htmlFor","type","classNames","onBlur","initialInput","NewMovie","onAdd","_useState2","count","setCount","newMovie","setNewMovie","isDisabled","pattern","isValidUrl","test","handleChange","e","_e$target","target","prevMovie","_objectSpread","_defineProperty","onSubmit","event","preventDefault","currentCount","disabled","App","moviesFromServer","setMovies","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb4a123d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && !value.trim() && required;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\nconst initialInput = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState<Movie>(initialInput);\n\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = newMovie;\n\n  const isDisabled = title.trim() !== ''\n    || imdbId.trim() !== ''\n    || imdbUrl.trim() !== ''\n    || imgUrl.trim() !== '';\n\n  const pattern = /^(https?:\\/\\/)?(www\\.)?[A-Za-z\\d.-]+\\.\\w{2,6}\\/?([^\\s]*)?$/;\n  const isValidUrl = pattern.test(imdbUrl)\n  && pattern.test(imgUrl);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setNewMovie((prevMovie) => ({\n      ...prevMovie,\n      [name]: value,\n    }));\n  };\n\n  const handlSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n    setCount((currentCount) => currentCount + 1);\n    setNewMovie(initialInput);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handlSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={handleChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={handleChange}\n        required\n      />\n\n      {isValidUrl && (\n        <p className=\"help is-danger\">{`Please enter valid URL for ${imgUrl}`}</p>\n      )}\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={handleChange}\n        required\n      />\n\n      {isValidUrl && (\n        <p className=\"help is-danger\">{`Please enter valid URL for ${imdbUrl}`}</p>\n      )}\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={handleChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (movie: Movie): void => {\n    setMovies((prevMovies: Movie[]) => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}